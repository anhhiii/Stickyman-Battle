import json
import os
from player import Player
from enemy import Enemy

class LevelManager:
    def __init__(self, level_file):
        """Kh·ªüi t·∫°o level t·ª´ file JSON"""
        # L·∫•y ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi ƒë·∫øn th∆∞ m·ª•c d·ª± √°n
        base_path = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
        full_path = os.path.join(base_path, level_file)

        # Ki·ªÉm tra file t·ªìn t·∫°i v√† load JSON
        try:
            with open(full_path, 'r') as file:
                self.level_data = json.load(file)
        except FileNotFoundError:
            print(f"‚ö†Ô∏è L·ªói: Kh√¥ng t√¨m th·∫•y file level t·∫°i {full_path}")
            exit()
        except json.JSONDecodeError:
            print(f"‚ö†Ô∏è L·ªói: File {level_file} kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng JSON!")
            exit()

        # Ki·ªÉm tra key b·∫Øt bu·ªôc trong JSON
        required_keys = ["player", "enemies", "rewards", "objective", "background"]
        for key in required_keys:
            if key not in self.level_data:
                print(f"‚ö†Ô∏è L·ªói: Thi·∫øu key '{key}' trong file {level_file}")
                exit()

        # Kh·ªüi t·∫°o c√°c bi·∫øn level
        self.player = None
        self.enemies = []
        self.background = self.level_data['background']
        self.rewards = self.level_data['rewards']
        self.objective = self.level_data['objective']

    def setup_level(self):
        """T·∫°o ng∆∞·ªùi ch∆°i v√† qu√°i t·ª´ d·ªØ li·ªáu trong level"""
        player_data = self.level_data['player']
        
        # Ki·ªÉm tra n·∫øu thi·∫øu "image" th√¨ b√°o l·ªói
        if "image" not in player_data:
            print("‚ö†Ô∏è L·ªói: Thi·∫øu d·ªØ li·ªáu nh√¢n v·∫≠t: 'image'")
            exit()

        self.player = Player(
            player_data['spawn_x'],
            player_data['spawn_y'],
            player_data['hp'],
            player_data['weapon'],
            player_data['image']  # ƒê·∫£m b·∫£o truy·ªÅn ƒë√∫ng ƒë∆∞·ªùng d·∫´n ·∫£nh
        )

        # T·∫°o qu√°i v·∫≠t t·ª´ d·ªØ li·ªáu JSON
        for enemy_data in self.level_data['enemies']:
            enemy = Enemy(
                enemy_data['type'],
                enemy_data['hp'],
                enemy_data['damage'],
                enemy_data['speed'],
                enemy_data['spawn_x'],
                enemy_data['spawn_y']
            )
            self.enemies.append(enemy)


    def check_victory(self):
        """Th·∫Øng khi kh√¥ng c√≤n qu√°i n√†o s·ªëng"""
        return all(enemy.hp <= 0 for enemy in self.enemies)

    def check_defeat(self):
        """Thua khi m√°u ng∆∞·ªùi ch∆°i <= 0"""
        return self.player.hp <= 0

    def reward_player(self):
        """Trao th∆∞·ªüng khi th·∫Øng level"""
        if self.check_victory():
            print("üéâ Ch√∫c m·ª´ng! B·∫°n ƒë√£ ho√†n th√†nh level!")
            self.player.gold += self.rewards.get('gold', 0)
            self.player.exp += self.rewards.get('exp', 0)
            print(f"üí∞ Th∆∞·ªüng: {self.rewards.get('gold', 0)} v√†ng, {self.rewards.get('exp', 0)} EXP!")
        else:
            print("üò¢ Thua r·ªìi! Th·ª≠ l·∫°i nh√©!")

